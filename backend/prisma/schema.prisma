generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName             String
  email                String   @unique
  password             String
  phone                String    @unique  
  nationalID           String
  role                 String
  phoneVerified        Boolean  @default(false)
  nationalIDVerified   Boolean  @default(false)
  otpCode              String?   
  otpExpiry            DateTime? 
  createdAt            DateTime @default(now())
  flights       Flight[]     @relation("UserFlights")      
  sentShipments Shipment[]   @relation("SenderShipments")
  carriedShipments Shipment[] @relation("CarrierShipments") 
  balance              Float    @default(0) 
  nationalIDVerifiedAt  DateTime?  
  nationalIDQRHash      String? 
  points               Int      @default(0)  
}
model Flight {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  carrierId     String   @db.ObjectId
  from          String
  to            String
  departureDate DateTime
  availableKg   Float
  status        String   @default("on-time")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  carrier       User     @relation("UserFlights", fields: [carrierId], references: [id])
  shipments     Shipment[]
}

model Shipment {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId             String   @db.ObjectId
  carrierId            String   @db.ObjectId
  flightId             String   @db.ObjectId
  acceptorName         String
  acceptorPhone        String
  acceptorNationalID   String
  itemWeight           Float
  acceptorVerified     Boolean  @default(false)
  verificationCode     String? 
  verificationExpiry   DateTime?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  sender   User   @relation("SenderShipments", fields: [senderId], references: [id])
  carrier  User   @relation("CarrierShipments", fields: [carrierId], references: [id])
  flight   Flight @relation(fields: [flightId], references: [id])
  trackingCode        String?  @unique
  status String @default("PENDING")
}
model Payment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  shipmentId  String
  reference   String   @unique
  amount      Float
  status      String   
  releasedAt  DateTime?
  createdAt   DateTime @default(now())
  platformFee Float?
}

model Agent {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  messages  SupportMessage[] @relation("AgentMessages")
  role      String   @default("agent")
}

model SupportMessage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId       
  agentId   String?  @db.ObjectId       
  message   String
  sentBy    String   
  status    String   @default("unread") 
  createdAt DateTime @default(now())
  read      Boolean  @default(false)

  agent Agent? @relation("AgentMessages", fields: [agentId], references: [id])
}
